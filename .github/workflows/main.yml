name: Terraform Pipeline

on:
  push:
    branches: [ main ]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "us-east-1"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform configuration
        run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init

      - name: Create Terraform plan
        run: terraform plan -out=planfile

      - name: Upload planfile artifact
        uses: actions/upload-artifact@v3
        with:
          name: planfile
          path: planfile

  apply:
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Download planfile artifact
        uses: actions/download-artifact@v3
        with:
          name: planfile
          path: .

      - name: Apply Terraform changes (manual approval required)
        run: terraform apply -input=false planfile
        env:
          TF_IN_AUTOMATION: true  # Discourage manual approval in production
        if: github.event.inputs.apply  # Manual trigger

  destroy:
    runs-on: ubuntu-latest
    needs: apply
    steps:
      - uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Destroy Terraform resources (manual approval required)
        run: terraform destroy --auto-approve
        env:
          TF_IN_AUTOMATION: true  # Discourage manual approval in production
        if: github.event.inputs.destroy  # Manual trigger